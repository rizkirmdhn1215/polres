rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to get user data
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return getUserData().role == 'admin'
    }

    // Users collection
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
      allow write: if isAdmin();
    }

    // Reports collection
    match /reports/{reportId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if isAdmin();
    }

    // Notifications collection
    match /notifications/{notificationId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
      allow update: if request.auth != null 
        && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['read']);
      allow delete: if request.auth != null;
    }

    // Header Notifications collection
    match /headerNotifications/{notificationId} {
      allow read: if true;  // Allow public read access
      allow write: if isAdmin();  // Only admins can create/update/delete
    }
  }
}